[
["rates.html", "Chapter 3 Fixed Income Features Calculations 3.1 Spot Rates 3.2 Zero Coupon Bond Prices", " Chapter 3 Fixed Income Features Calculations In this chapter, I will construct spot rates, zero coupon bond prices, excess returns, and yield factors. These features will be used later in hedging strategies and for general exploration of the data. 3.1 Spot Rates Script) 04-spot-rates-and-prices.R Spot rates series can be constructed from the 6 parameters in the rates dataset. The following formula is used to construct the spot rates. It is integrated form of the Svensson extension of the Nelson and Siegal approach to calculating instantaneous forward rates. Svensson added a second hump term to the model that Nelson and Siegal created. Integrating the instantaneous forward rates gives us the spot rates. To reconstruct this, I used a programming concept known as a function factory. This is a specialized function that returns a function. This extends naturally to this use case because the outer function can accept the time series of the 6 parameters, and the inner function that getâ€™s returned is parameterized by n, corresponding to the n-year spot rate at time t. The spot_rate_factory() function lives in ratekit, and looks like this. spot_rate_factory ## function(beta_0, beta_1, beta_2, beta_3, tau_1, tau_2) { ## ## # Spot rate function based on Equation 22 of ## # Gurkaynak, Sack and Wright (2006) ## spot_rate_n &lt;- function(n) { ## beta_0 + ## beta_1 * (1 - exp( -n / tau_1)) / (n / tau_1) + ## beta_2 * ((1 - exp( -n / tau_1)) / (n / tau_1) - exp( -n / tau_1)) + ## beta_3 * ((1 - exp( -n / tau_2)) / (n / tau_2) - exp( -n / tau_2)) ## } ## ## spot_rate_n ## } ## &lt;bytecode: 0x7fce7a7e7208&gt; ## &lt;environment: namespace:ratekit&gt; As you can see, it accepts the 6 parameters, and returns a function parameterized by n. Because we want to calculate the spot rate for a number of different years, this parameterized function will be very useful. Below is an example usage of this concept. # The monthly parameters from the Data chapter parameters_monthly &lt;- read_rds(&quot;data/cleaned/parameters/parameters_monthly.rds&quot;) # The generated function. The function signature is generate_spot_rates(n) generate_spot_rates &lt;- with( data = parameters_monthly, expr = spot_rate_factory(BETA0, BETA1, BETA2, BETA3, TAU1, TAU2) ) # Calculate the series of 1 year, 3 year, and 5 year spot rates parameters_monthly %&gt;% select(date) %&gt;% mutate( spot_1_yr = generate_spot_rates(1), spot_3_yr = generate_spot_rates(3), spot_5_yr = generate_spot_rates(5) ) ## # A time tibble: 459 x 4 ## # Index: date ## date spot_1_yr spot_3_yr spot_5_yr ## &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1980-01-31 11.8 10.9 10.6 ## 2 1980-02-29 14.5 13.2 12.4 ## 3 1980-03-31 15.1 13.1 12.1 ## 4 1980-04-30 10.7 10.1 10.2 ## 5 1980-05-30 8.71 9.10 9.41 ## 6 1980-06-30 8.53 9.10 9.35 ## 7 1980-07-31 9.08 9.74 9.95 ## 8 1980-08-29 11.1 11.3 11.2 ## 9 1980-09-30 11.8 11.6 11.4 ## 10 1980-10-31 13.0 12.3 12.2 ## # ... with 449 more rows 3.2 Zero Coupon Bond Prices Script) 04-spot-rates-and-prices.R n-year zero coupon bond prices can be calculated easily from their corresponding spot rates. Below is the relationship between the two. "]
]
